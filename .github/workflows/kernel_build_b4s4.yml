name: Build KernelSU-Next for B4S4 (Bonito/Sargo)

on:
  workflow_dispatch:
  push:
    branches:
      - b4s4
  pull_request:
    branches:
      - b4s4
concurrency:
  group: kernel-build
  cancel-in-progress: false
 

jobs:
  build:
    runs-on: ubuntu-22.04
    container: ghcr.io/tedomi2705/kernel_builder_image:latest

    steps:

      - name: 📂 Checkout builder's sourcecode and get files
        uses: actions/checkout@v4

      - name: ⚡ Checkout kernel's sourcecode and clone submodules
        run: |
          git clone --depth=1 https://github.com/Evolution-X-Devices/kernel_google_b4s4 -b vic
        
      - name: 📅 Export date of build
        run: |
          echo "DATE=$(date +%d%m%Y)" >> $GITHUB_ENV

      - name: 🔄 Update KernelSU-Next
        run: |
          cd kernel_google_b4s4
          rm -rf KernelSU-Next
          git clone --depth=1 https://github.com/KernelSU-Next/KernelSU-Next -b v1.0.5

      - name: 📥 Clone AnyKernel3
        run: |
          cd kernel_google_b4s4
          git clone --depth=1 -b b4s4 https://github.com/Oneloutre/AnyKernel3.git anykernel
          rm -rf anykernel/.git
      
      - name: 🛠 Use repo's mkdtimg
        run: |
          chmod +x tools/mkdtimg
          mv tools/mkdtimg /usr/local/bin/mkdtimg

      - name: 🔍 Device's codename and kernel's version
        run: |
          cd kernel_google_b4s4
          DEVICE_CODENAME=sargo-bonito
          KERNEL_VERSION=$(make kernelversion)

          echo "Device Codename: $DEVICE_CODENAME"
          echo "Kernel Version: $KERNEL_VERSION"

          echo "DEVICE_CODENAME=$DEVICE_CODENAME" >> $GITHUB_ENV
          echo "KERNEL_VERSION=$KERNEL_VERSION" >> $GITHUB_ENV

      - name: 🚀 Enable ccache to speed the build up
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 7G

      - name: 📦 Install dependencies
        run: |
          apt-get update
          apt-get install -y \
          device-tree-compiler \
          lz4

      - name: 🛠️ Build the kramel
        run: |
          cd kernel_google_b4s4
          export ARCH=arm64
          export SUBARCH=arm64
          export KBUILD_COMPILER_STRING=$(clang --version | head -n 1)
          export CCACHE_EXEC=$(which ccache)
          export KBUILD_BUILD_HOST="Caelum-Github-actions-Onelots"

          make O=out ARCH=arm64 bonito_defconfig vendor/kernelsu.config V=1
          make O=out ARCH=arm64 olddefconfig
          ./scripts/config --file out/.config -e CONFIG_BUILD_ARM64_APPENDED_DTB_IMAGE

          make -j$(nproc --all) O=out \
          ARCH=arm64 \
          CC="ccache clang" \
          LLVM=1 \
          LLVM_IAS=1 \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-android- \
          CROSS_COMPILE_ARM32=arm-linux-androideabi-

      - name: 🚀 Copy the compiled kernel to AnyKernel3 then create the zip
        run: |
          cd kernel_google_b4s4
          ZIP_NAME="Kernel-Caelum-${DEVICE_CODENAME}-${KERNEL_VERSION}-$(date +%d%m%Y).zip"

          cp out/arch/arm64/boot/Image.lz4-dtb anykernel/

          cd anykernel && zip -r9 $ZIP_NAME ./*
          mv $ZIP_NAME ../../

          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

      - name: 🤌 Copy zip file to get 2 different zip files
        run: |

          ZIP_ALTERNATIVE="KernelSU-Next-Caelum-${DEVICE_CODENAME}-latest.zip"
          cp ${ZIP_NAME} $ZIP_ALTERNATIVE

          echo "Copied ${ZIP_NAME} as $ZIP_ALTERNATIVE"
          echo "ZIP_ALTERNATIVE=$ZIP_ALTERNATIVE" >> $GITHUB_ENV
          
      - name: 📤 Publish github release
        if: false
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ZIP_ALTERNATIVE }}
          tag_name: "latest"
          draft: false
          prerelease: false

      - name: 📤 Publish with tag associated to the kernel and the date
        if: false
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ZIP_NAME }}
          tag_name: Kernel-Caelum-${{ env.DEVICE_CODENAME }}-${{ env.KERNEL_VERSION }}-${{ env.DATE }}
          draft: false
          prerelease: false
      - name: 📦 Upload build ZIP to GitHub Actions artifact
        uses: actions/upload-artifact@v4
        with:
             name: kernel-build-${{ env.DEVICE_CODENAME }}
             path: ${{ env.ZIP_NAME }}




      
